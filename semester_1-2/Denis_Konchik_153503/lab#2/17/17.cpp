// Лабораторная 2, задача 17. Выполнена: Кончик Д. С.

/*
В прямоугольной комнате W на H стоит прямоугольный стол стороны которого параллельны сторонам комнаты.
Нижний левый угол стола находится в точке (x1, y1), а верхний правый в точке (x2, y2).
Вы хотите поставить в эту комнату ещё один прямоугольный стол с шириной w и высотой h так,
чтобы сторона, соответствующая ширине стола, была параллельна стороне комнаты, соответствующей её ширине.
(столы могут касаться друг друга, но не могут иметь общей площади).
На какое минимальное расстояние нужно сдвинуть первый стол так, чтобы в комнату можно было поставить второй стол?
Поворачивать столы - запрещено. В расчётах используется Декартова (от Рене Декарт) система координат.

Входные данные:
- В первой строке набора входных данных заданы два целых числа W и H (1 <= W,H <= 108) — ширина и высота комнаты.
- Во второй строке набора входных данных заданы четыре целых числа x1, y1, x2 и y2
(0 <= x1 < x2 <= W; 0 <= y1 < y2 <= H) — координаты углов первого стола.
- В третьей строке набора входных данных заданы два целых числа w2 и h 2
(1 <= w2 <= W; 1 <= h2 <= H) — ширина и высота второго стола.

Выходные данные:
Выведите минимальное расстояние, на которое нужно передвинуть первый стол, или −1,
если в любом случае не получится поставить в комнату второй стол.
Ваш ответ будет засчитан как правильный, если его абсолютная или относительная ошибка
относительно правильного ответа не превосходит 10^−6.
*/

#include <iostream>
#include <cmath>
using namespace std;

int main()
{
    setlocale(LC_ALL, "Rus");
    int W, H, w2, h2, x1, y1, x2, y2;

    // Ввод данных
    cout << "Введите целые числа.";
    cout << "\nШирина и высота комнаты (W, H): "; cin >> W >> H;
    cout << "Координаты углов первого стола (x1, y1, x2, y2): "; cin >> x1 >> y1 >> x2 >> y2;
    cout << "Ширина и высота второго стола (w2, h2): "; cin >> w2 >> h2;

    // Проверка значений входных данных (согласно условию)
    if (1 <= W && W <= 108 && 1 <= H && H <= 108 &&
        0 <= x1 && x1 < x2 && x2 <= W && 0 <= y1 && y1 < y2 && y2 <= H &&
        w2 >= 1 && w2 <= W && 1 <= h2 && h2 <= H) {

        // Ширина и высота #1 стола
        int w1 = x2 - x1;
        int h1 = y2 - y1;

        int min_x = 0, min_y = 0; // Минимальные значения сдвигов по X, Y
        int min = 0; // Абсолютное минимальное значение сдвига
        int result_1 = 0, result_2 = 0; // Значения сдвигов

        // Проверка невозможности расположения двух столов
        if ((w1 + w2 > W && h1 + h2 > H) || w2 > W || h2 > H) {
            // Стол никак не влезет
            cout << -1;

        } else if (w1 + w2 + x1 <= W || w1 + w2 + (W - x2) <= W ||
            h1 + h2 + y1 <= H || h1 + h2 + (H - y2) <= H) {
            // Стол влезет без сдвига #1 стола
            cout << 0;

        } else {

            // Вычисление минимального значения сдвига по X
            if (h2 + h1 <= H) {
                result_1 = abs(h1 + h2 + y1 - H); // #2 стол выше #1
                result_2 = abs(h1 + h2 + (H - y2) - H); // #2 стол ниже #1
                min_y = result_1 <= result_2 ? result_1 : result_2; 
            }

            // Вычисление минимального значения сдвига по Y
            if (w2 + w1 <= W) {
                result_1 = abs(w1 + w2 + x1 - W); // #2 стол справа от #1
                result_2 = abs(w1 + w2 + (W - x2) - W); // #2 стол слева от #1
                min_x = result_1 <= result_2 ? result_1 : result_2;
            }

            // Вычисление абсолютного минимального значения сдвига
            if (min_x == 0 && min_y == 0)
                min = 0;
            else if (min_x != 0 && min_y != 0)
                min = min_x <= min_y ? min_x : min_y;
            else
                min = min_x == 0 ? min_y : min_x;

            
            cout << min;

        }
    }
    else {
        cout << "Некорректный ввод";
    }

}
