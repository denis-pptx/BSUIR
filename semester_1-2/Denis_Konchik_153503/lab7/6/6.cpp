// Лабораторная 7, задача 6. Выполнена: Кончик Д. С.

/*
Пусть S(x) - это сумма цифр числа x, записанного в десятичной системе счисления.
Например, S(5) = 5, S(10) = 1, S(322) = 7.
Мы будем называть число x интересным, если S(x+1) < S(x). В каждом тесте вам будет дано
одно число n. Ваша задача - посчитать количество чисел x таких, что 1 <= x <= n и x - интересное.

[Входные данные]
Первая строка содержит одно целое число t (1 <= t <= 1000) - количество наборов входных данных.
Далее следует t строк, i-я строка содержит одно целое число n (1 <= n <= 10^9) для i-го набора входных данных.

[Выходные данные]
Выведите t целых чисел, i-е число должно быть ответом на i-й набор входных данных.

[Входные данные]		[Выходные данные]
5						
1						0
9						1
10						1
34						3
880055535				88005553
*/

#include <iostream>
#define ll long long
using namespace std;
 
ll FuncAns(ll n) {
	return (n + 1) / 10;
}

ll input_natural() {
	ll x;

	// Пока не будет введено корректное значение
	while (true) {
		cin >> x;

		// Пропуск пробелов после элемента
		while (cin.peek() == ' ')
			cin.ignore(1, ' ');

		// Проверка предыдущего извлечения данных из буфера
		// Извлечение неудачное / удачное, но остались неизвлеченные символы / число отрицательное
		if (cin.fail() || cin.peek() != '\n' || x <= 0) {
			cin.clear(); // Возвращение в обычный режим работы
			cin.ignore(10000, '\n'); // Игнор 'n' символов до Enter
			cout << "Repeat input: ";
		}
		else {
			return x;
		}
	}
}

int main()
{
	// Ввод количества наборов
	ll t = input_natural();

	ll* ans = new ll[t];

	// Вычисление результатов
	for (int i = 0; i < t; i++) {
		ll n = input_natural();
		ans[i] = FuncAns(n);
	}
	
	// Вывод данных
	cout << "\n";
	for (int i = 0; i < t; i++)
		cout << ans[i] << "\n";
	
	delete[] ans;

	return 0;
}




/*
Решение влоб

int FuncS(ll x) {
	int S = 0;
	while (x) {
		S += x % 10;
		x /= 10;
	}
	return S;
}

int main()
{
	ll n; cin >> n;

	ll amount = 0;
	for (ll i = 1; i <= n; i++)  
		if ((i + 1) % 10 == 0 && FuncS(i + 1) < FuncS(i)) {
			amount++;
		}

	cout << amount;
}

*/